// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package hms.proxies;

public class Hostel extends administration.proxies.Account
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "HMS.Hostel";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Address("Address"),
		ContactNo("ContactNo"),
		FullName("FullName"),
		Email("Email"),
		IsLocalUser("IsLocalUser"),
		Name("Name"),
		Password("Password"),
		LastLogin("LastLogin"),
		Blocked("Blocked"),
		BlockedSince("BlockedSince"),
		Active("Active"),
		FailedLogins("FailedLogins"),
		WebServiceUser("WebServiceUser"),
		IsAnonymous("IsAnonymous"),
		Hostel_City("HMS.Hostel_City"),
		Review_Hostel("HMS.Review_Hostel"),
		Hostel_SystemMedia("HMS.Hostel_SystemMedia"),
		Hostel_Allotment("HMS.Hostel_Allotment"),
		Hostel_Facility("HMS.Hostel_Facility"),
		NoticeBoard_Hostel("HMS.NoticeBoard_Hostel"),
		Hostel_Room("HMS.Hostel_Room"),
		UserRoles("System.UserRoles"),
		User_Language("System.User_Language"),
		User_TimeZone("System.User_TimeZone");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Hostel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Hostel(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject hostelMendixObject)
	{
		super(context, hostelMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, hostelMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * @deprecated Use 'Hostel.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static hms.proxies.Hostel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return hms.proxies.Hostel.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static hms.proxies.Hostel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new hms.proxies.Hostel(context, mendixObject);
	}

	public static hms.proxies.Hostel load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return hms.proxies.Hostel.initialize(context, mendixObject);
	}

	public static java.util.List<hms.proxies.Hostel> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> hms.proxies.Hostel.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Address
	 */
	public final java.lang.String getAddress()
	{
		return getAddress(getContext());
	}

	/**
	 * @param context
	 * @return value of Address
	 */
	public final java.lang.String getAddress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Address.toString());
	}

	/**
	 * Set value of Address
	 * @param address
	 */
	public final void setAddress(java.lang.String address)
	{
		setAddress(getContext(), address);
	}

	/**
	 * Set value of Address
	 * @param context
	 * @param address
	 */
	public final void setAddress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String address)
	{
		getMendixObject().setValue(context, MemberNames.Address.toString(), address);
	}

	/**
	 * @return value of ContactNo
	 */
	public final java.lang.String getContactNo()
	{
		return getContactNo(getContext());
	}

	/**
	 * @param context
	 * @return value of ContactNo
	 */
	public final java.lang.String getContactNo(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ContactNo.toString());
	}

	/**
	 * Set value of ContactNo
	 * @param contactno
	 */
	public final void setContactNo(java.lang.String contactno)
	{
		setContactNo(getContext(), contactno);
	}

	/**
	 * Set value of ContactNo
	 * @param context
	 * @param contactno
	 */
	public final void setContactNo(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String contactno)
	{
		getMendixObject().setValue(context, MemberNames.ContactNo.toString(), contactno);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Hostel_City
	 */
	public final hms.proxies.City getHostel_City() throws com.mendix.core.CoreException
	{
		return getHostel_City(getContext());
	}

	/**
	 * @param context
	 * @return value of Hostel_City
	 * @throws com.mendix.core.CoreException
	 */
	public final hms.proxies.City getHostel_City(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		hms.proxies.City result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Hostel_City.toString());
		if (identifier != null) {
			result = hms.proxies.City.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Hostel_City
	 * @param hostel_city
	 */
	public final void setHostel_City(hms.proxies.City hostel_city)
	{
		setHostel_City(getContext(), hostel_city);
	}

	/**
	 * Set value of Hostel_City
	 * @param context
	 * @param hostel_city
	 */
	public final void setHostel_City(com.mendix.systemwideinterfaces.core.IContext context, hms.proxies.City hostel_city)
	{
		if (hostel_city == null) {
			getMendixObject().setValue(context, MemberNames.Hostel_City.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Hostel_City.toString(), hostel_city.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Review_Hostel
	 */
	public final java.util.List<hms.proxies.Review> getReview_Hostel() throws com.mendix.core.CoreException
	{
		return getReview_Hostel(getContext());
	}

	/**
	 * @param context
	 * @return value of Review_Hostel
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<hms.proxies.Review> getReview_Hostel(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<hms.proxies.Review> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Review_Hostel.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(hms.proxies.Review.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Review_Hostel
	 * @param review_hostel
	 */
	public final void setReview_Hostel(java.util.List<hms.proxies.Review> review_hostel)
	{
		setReview_Hostel(getContext(), review_hostel);
	}

	/**
	 * Set value of Review_Hostel
	 * @param context
	 * @param review_hostel
	 */
	public final void setReview_Hostel(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<hms.proxies.Review> review_hostel)
	{
		var identifiers = review_hostel
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Review_Hostel.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Hostel_SystemMedia
	 */
	public final hms.proxies.SystemMedia getHostel_SystemMedia() throws com.mendix.core.CoreException
	{
		return getHostel_SystemMedia(getContext());
	}

	/**
	 * @param context
	 * @return value of Hostel_SystemMedia
	 * @throws com.mendix.core.CoreException
	 */
	public final hms.proxies.SystemMedia getHostel_SystemMedia(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		hms.proxies.SystemMedia result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Hostel_SystemMedia.toString());
		if (identifier != null) {
			result = hms.proxies.SystemMedia.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Hostel_SystemMedia
	 * @param hostel_systemmedia
	 */
	public final void setHostel_SystemMedia(hms.proxies.SystemMedia hostel_systemmedia)
	{
		setHostel_SystemMedia(getContext(), hostel_systemmedia);
	}

	/**
	 * Set value of Hostel_SystemMedia
	 * @param context
	 * @param hostel_systemmedia
	 */
	public final void setHostel_SystemMedia(com.mendix.systemwideinterfaces.core.IContext context, hms.proxies.SystemMedia hostel_systemmedia)
	{
		if (hostel_systemmedia == null) {
			getMendixObject().setValue(context, MemberNames.Hostel_SystemMedia.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Hostel_SystemMedia.toString(), hostel_systemmedia.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Hostel_Allotment
	 */
	public final java.util.List<hms.proxies.Allotment> getHostel_Allotment() throws com.mendix.core.CoreException
	{
		return getHostel_Allotment(getContext());
	}

	/**
	 * @param context
	 * @return value of Hostel_Allotment
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<hms.proxies.Allotment> getHostel_Allotment(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<hms.proxies.Allotment> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Hostel_Allotment.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(hms.proxies.Allotment.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Hostel_Allotment
	 * @param hostel_allotment
	 */
	public final void setHostel_Allotment(java.util.List<hms.proxies.Allotment> hostel_allotment)
	{
		setHostel_Allotment(getContext(), hostel_allotment);
	}

	/**
	 * Set value of Hostel_Allotment
	 * @param context
	 * @param hostel_allotment
	 */
	public final void setHostel_Allotment(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<hms.proxies.Allotment> hostel_allotment)
	{
		var identifiers = hostel_allotment
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Hostel_Allotment.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Hostel_Facility
	 */
	public final java.util.List<hms.proxies.Facility> getHostel_Facility() throws com.mendix.core.CoreException
	{
		return getHostel_Facility(getContext());
	}

	/**
	 * @param context
	 * @return value of Hostel_Facility
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<hms.proxies.Facility> getHostel_Facility(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<hms.proxies.Facility> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Hostel_Facility.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(hms.proxies.Facility.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Hostel_Facility
	 * @param hostel_facility
	 */
	public final void setHostel_Facility(java.util.List<hms.proxies.Facility> hostel_facility)
	{
		setHostel_Facility(getContext(), hostel_facility);
	}

	/**
	 * Set value of Hostel_Facility
	 * @param context
	 * @param hostel_facility
	 */
	public final void setHostel_Facility(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<hms.proxies.Facility> hostel_facility)
	{
		var identifiers = hostel_facility
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Hostel_Facility.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of NoticeBoard_Hostel
	 */
	public final java.util.List<hms.proxies.NoticeBoard> getNoticeBoard_Hostel() throws com.mendix.core.CoreException
	{
		return getNoticeBoard_Hostel(getContext());
	}

	/**
	 * @param context
	 * @return value of NoticeBoard_Hostel
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<hms.proxies.NoticeBoard> getNoticeBoard_Hostel(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<hms.proxies.NoticeBoard> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.NoticeBoard_Hostel.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(hms.proxies.NoticeBoard.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of NoticeBoard_Hostel
	 * @param noticeboard_hostel
	 */
	public final void setNoticeBoard_Hostel(java.util.List<hms.proxies.NoticeBoard> noticeboard_hostel)
	{
		setNoticeBoard_Hostel(getContext(), noticeboard_hostel);
	}

	/**
	 * Set value of NoticeBoard_Hostel
	 * @param context
	 * @param noticeboard_hostel
	 */
	public final void setNoticeBoard_Hostel(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<hms.proxies.NoticeBoard> noticeboard_hostel)
	{
		var identifiers = noticeboard_hostel
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.NoticeBoard_Hostel.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Hostel_Room
	 */
	public final java.util.List<hms.proxies.Room> getHostel_Room() throws com.mendix.core.CoreException
	{
		return getHostel_Room(getContext());
	}

	/**
	 * @param context
	 * @return value of Hostel_Room
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<hms.proxies.Room> getHostel_Room(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<hms.proxies.Room> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Hostel_Room.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(hms.proxies.Room.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Hostel_Room
	 * @param hostel_room
	 */
	public final void setHostel_Room(java.util.List<hms.proxies.Room> hostel_room)
	{
		setHostel_Room(getContext(), hostel_room);
	}

	/**
	 * Set value of Hostel_Room
	 * @param context
	 * @param hostel_room
	 */
	public final void setHostel_Room(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<hms.proxies.Room> hostel_room)
	{
		var identifiers = hostel_room
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Hostel_Room.toString(), identifiers);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final hms.proxies.Hostel that = (hms.proxies.Hostel) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
